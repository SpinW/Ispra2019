%% Ferromagnetic first neighbor Kagome lattice
% We define the kagome lattice using the "P -3" space group (Nr. 147), with
% lattice parameters a, b = 6A, c = 5A and angles  90, 90, 120. Using the 3
% fold symmetry, we need to define only one magnetic atom at [1/2 0 0]. In this space group
% all first neighbor couplings will be equivalent (related by symmetry).
% Symmetry equivalent positions of the magnetic atoms are automatically
% generated by the spinw.matom method. The magnetic atoms are Cu+ with S=1 spin.

%% Generate the structure, display the atomic positions and plot it
###
###
###
disp('Magnetic atom positions:')
###
###

%% Create FM bonds
% The first neighbor bonds will be ferromagnetic, J1 = -1 meV. The
% spinw.gencoupling will use the space group operators to identify
% equivalent couplings, if two bonds have the same length but not symmetry
% related, then they will be identified as different bonds. The
% 'maxDistance' option of the spinw.gencoupling method will be ensure that
% all bonds are generated up to the given distance in Angstrom.

%% Generate all couplings with a maximum distancce of 4A.
% Display ALL calculated calculate couplings.
###
disp('Bonds (length in Angstrom):')
###

%% Add J1 using addmatrix and addcoupling.
###
###

%% Plot a nice rectangular cutout of the kagome lattice
plot(###,'range',[31 32 2],'unit','xyz','cellMode','single')

%% FM magnetic structure
% All spins are parallel, pointing along the y-axis (perpendicular to ac
% plane). We use the "helical" mode of the sw.gencoupling() function, even
% though the structure is not helical. However in this mode all missing
% spins will be automatically created using the k-vector and normal vector
% and assuming helical magnetic structure. Thus if we give k = (0 0 0) and
% only the direction of the first spin in the unit cell, the code will
% create all other spin parallel to the first.

%% Generate the stated magnetic structure, display it and plot to make sure
% it's correct. (Try plotting [2, 2, 1] unit cells)
###
disp('Magnetic structure:')
###
###


%% Spin wave dispersion
% We calculate the spin wave dispersion. There are three modes, equal to
% the number of magnetic atom in the magnetic unit cell, denoted by
% different colors. At the zone center, the dispersion of the goldstone
% mode is parabolic, due to the FM interactions.

%% Calculate the spin wave dispersion for the following trajectory (H, K, L):
% [-1/2 0 0] -> [0 0 0] -> [1/2 1/2 0]. Use a sensible number of points.

spec = ###
fmkSpec = sw_neutron(spec);
fmkSpec = sw_egrid(fmkSpec, 'Evect',linspace(0,6.5,100),'component', ###);
figure
sw_plotspec(fmkSpec,'mode',1,'colorbar',false,'axLim',[0 8])

%% Powder spectrum
% We plot the powder spectrum two different ways. First as calculated (to
% show the extremely sharp Van Hoove singularity at the top of the
% dispersion), secondly convolute with a Gaussian along energy.

%% Calulate the powder spectra from 0-2.5A. Use the help of @spinw/powspec or
% ask for the correct terminology. How does the number of samples effect the calculation?

fmkPow = ###;
figure
subplot(2,1,1)
sw_plotspec(fmkPow,'colorbar',true,'axLim',[0 0.05])
subplot(2,1,2)
sw_plotspec(fmkPow,'colorbar',true,'axLim',[0 0.05], ###)

%% Density of states
% We can plot the density of magnon states by calculating the weight of
% random points in the first Brillouin Zone. Then we can convolute with a
% Gaussian for better plotting and sum up all the Q points.

%% Calculate the spinwave disperssion for 1e5 random Q points throughout the
% first Brillouin zone. Why did we choose the 'Sxx+Syy+Szz' component?

nQ = 1E5;
Q = ###;

specDOS = ###
specDOS = sw_egrid(specDOS, 'component', 'Sxx+Syy+Szz');
specDOS = sw_instrument(specDOS, 'dE', 0.1);
I = sum(specDOS.swConv, 2);
E = specDOS.Evect(2:end);

figure
plot(E, I)
xlabel('Energy meV')
ylabel('Magnon DOS')


